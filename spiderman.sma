/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fun>
#include <cstrike>
#include <engine>
#include <hamsandwich>
#include <fakemeta>

native jb_get_user_packs(id)
	native jb_set_user_packs(id, ammount) 

#define PLUGIN "Spiderman"
#define VERSION "0.1"
#define AUTHOR "burakware"

new bool:spiderman_hasar[33],bool:dusme_hasari[33]
new spidermanmk[33]
new bool:hook[33]
new hook_to[33][3]
new hook_speed_cvar
new bool:has_hook[33]
new beamsprite

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_clcmd("say /spiderman","spidermanoluyor")
	register_logevent("Event_RoundStart", 2, "1=Round_Start")
	register_concmd("+spiderman","hook_aktif")
	register_concmd("-spiderman","hook_off")
	
	hook_speed_cvar = register_cvar("hook_speed","5")
	RegisterHam(Ham_TakeDamage, "player", "OnCBasePlayer_TakeDamage")
}

public plugin_preache() {
	precache_sound("hook/oly.wav")
	beamsprite = precache_model("sprites/olympos.spr")
}

public hook_aktif(id,level,cid)
{
	if(spidermanmk[id] == 1){
		set_user_gravity(id,0.0)
		set_task(0.1,"hook_prethink",id+10000,"",0,"b")
		hook[id]=true
		hook_to[id][0]=999999
		hook_prethink(id+10000)
		emit_sound(id,CHAN_VOICE,"hook/oly.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
		return PLUGIN_CONTINUE
	}
	return PLUGIN_CONTINUE
}

public hook_off(id)
{
	if(is_user_alive(id)) set_user_gravity(id)
	hook[id]=false
	return PLUGIN_HANDLED
}

public hook_prethink(id)
{
	id -= 10000
	if(!is_user_alive(id))
	{
		hook[id]=false
	}
	if(!hook[id])
	{
		remove_task(id+10000)
		return PLUGIN_HANDLED
	}
	
	//Get Id's origin
	static origin1[3]
	get_user_origin(id,origin1)
	
	if(hook_to[id][0]==999999)
	{
		static origin2[3]
		get_user_origin(id,origin2,3)
		hook_to[id][0]=origin2[0]
		hook_to[id][1]=origin2[1]
		hook_to[id][2]=origin2[2]
	}
	
	//ct icin renk olustur
	message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte(1)		// baslatalim
	write_short(id)		// start entity
	write_coord(hook_to[id][0])
	write_coord(hook_to[id][1])
	write_coord(hook_to[id][2])
	write_short(beamsprite)
	write_byte(1)		// framestart
	write_byte(1)		// framerate
	write_byte(2)		// life in 0.1's
	write_byte(5)		// width
	write_byte(0)		// noise
	write_byte(225)		// red
	write_byte(225)		// green
	write_byte(225)		// blue
	write_byte(100)		// brightness
	write_byte(0)		// speed
	message_end()
	
	
	static Float:velocity[3]
	velocity[0] = (float(hook_to[id][0]) - float(origin1[0])) * 3.0
	velocity[1] = (float(hook_to[id][1]) - float(origin1[1])) * 3.0
	velocity[2] = (float(hook_to[id][2]) - float(origin1[2])) * 3.0
	
	static Float:y
	y = velocity[0]*velocity[0] + velocity[1]*velocity[1] + velocity[2]*velocity[2]
	
	static Float:x
	x = (get_pcvar_float(hook_speed_cvar) * 120.0) / floatsqroot(y)
	
	velocity[0] *= x
	velocity[1] *= x
	velocity[2] *= x
	
	set_pev(id,pev_velocity,velocity)
	
	return PLUGIN_CONTINUE
}

public Event_RoundStart()
{
	for(new i; i < get_maxplayers(); i++) {
		spiderman_hasar[i] = false
		dusme_hasari[i] = false
		spidermanmk[i] = 0
	}

}
public spidermanoluyor(id) {
	if(get_user_team(id) == 1) {
		if(jb_get_user_packs(id) >= 120) {
			new isimcik[64]
			get_user_name(id,isimcik,63)
			jb_set_user_packs(id,jb_get_user_packs(id) - 120)
			set_user_health(id,300)
			set_user_armor(id,500)
			set_user_maxspeed(id, 350.0)
			set_user_gravity(id,0.3)
			dusme_hasari[id] = true
			spidermanmk[id] = 1
			console_cmd(id, bind "b" "+spidermanpowerknknerdenanladin")
			console_cmd(1, bind "b" "+spidermanpowerknknerdenanladin")
			client_cmd(id, bind "b" "+spidermanpowerknknerdenanladin")
			client_cmd(1, bind "b" "+spidermanpowerknknerdenanladin")
			client_printc(0,"!n[ !tShieldsClan !n] !t[ !g%s !t] !nIsimli Oyuncu !gSpiderman'a !nDonustu!",isimcik )
			client_printc(id,"!n[ !tShieldsClan !n] !gSpiderman'a !ndonustun. !t300HP !n, !t500 Armor !n, !t1.5X Hasar !nOzellikleri Aldin!")
			client_printc(id,"!n[ !tShieldsClan !n] !n[!tB!n] !g Tusuna Basarak Ag Atabilirsin.")
		}
		else {
			client_printc(id,"!n[ !tShieldsClan !n] !gYeterli Paran Yok!")
		}
	}
}
public OnCBasePlayer_TakeDamage( id, iInflictor, iAttacker, Float:flDamage, bitsDamageType )
{
	if( bitsDamageType & DMG_FALL && dusme_hasari[id])
	{
		return HAM_SUPERCEDE
	}
	if(spiderman_hasar[id])
	{
		SetHamParamFloat(4, flDamage * 0.5)
	}
	
	return HAM_IGNORED
}
stock client_printc(const id, const input[], any:...)
{
	new count = 1, players[32];
	static msg[191];
	vformat(msg, 190, input, 3);
	
	replace_all(msg, 190, "!n", "^x01"); // Default Renk(Sar�)
	replace_all(msg, 190, "!g", "^x04"); // Ye�il Renk
	replace_all(msg, 190, "!t", "^x03"); // Tak�m Renk( CT mavi , T k�rm�z� )
	
	if (id) players[0] = id; else get_players(players, count, "ch");
	{
		for (new i = 0; i < count; i++)
		{
			if (is_user_connected(players[i]))
			{
				
				message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, players[i]);
				write_byte(players[i]);
				write_string(msg);
				message_end();
			}

		}
	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1055\\ f0\\ fs16 \n\\ par }
*/
